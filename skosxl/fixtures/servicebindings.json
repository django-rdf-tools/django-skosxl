[
    {
        "model": "rdf_io.servicebinding",
        "pk": 1,
        "fields": {
            "title": "SKOS ConceptScheme inferencing",
            "description": "Inferencing for a complete concept scheme",
            "binding_type": "INFERENCE",
            "service_api": "RDF4JREST",
            "service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_INFERREPO}",
            "resource": "/statements?context=<{uri}>",
            "inferenced_resource": "/statements?context=<{uri}?_view=inferred>",
            "object_filter": "",
            "next_service": 7,
            "on_delete_service": null,
            "on_fail_service": null,
            "object_mapping": [
                [ "skosxl: SKOS ConceptScheme" ]
            ]
        }
    },
    {
        "model": "rdf_io.servicebinding",
        "pk": 2,
        "fields": {
            "title": "SKOS ConceptScheme persistence",
            "description": "Replace concept scheme",
            "binding_type": "PERSIST_REPLACE",
            "service_api": "RDF4JREST",
            "service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_DEFAULTREPO}",
            "resource": "/statements?context=<{uri}>",
            "inferenced_resource": null,
            "object_filter": "",
            "next_service": null,
            "on_delete_service": null,
            "on_fail_service": null,
            "object_mapping": [
                [ "skosxl: SKOS ConceptScheme" ]
            ]
        }
    },
    {
        "model": "rdf_io.servicebinding",
        "pk": 3,
        "fields": {
            "title": "Generic RDF context in target",
            "description": "A generic approach of publishing a context into a remote repository using the resource id, model and the  host name as a context template",
            "binding_type": "PERSIST_REPLACE",
            "service_api": "RDF4JREST",
            "service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_DEFAULTREPO}",
            "resource": "/statements?context=<{_RDFSERVER}/{model}/{id}>",
            "inferenced_resource": null,
            "object_filter": "",
            "next_service": null,
            "on_delete_service": null,
            "on_fail_service": null,
            "object_mapping": []
        }
    },
    {
        "model": "rdf_io.servicebinding",
        "pk": 5,
        "fields": {
            "title": "SPIN rules inferencing store for generating richer entailed graphs",
            "description": "Loads SPIN rule to default inferencing helper",
            "binding_type": "PERSIST_REPLACE",
            "service_api": "RDF4JREST",
            "service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_INFERREPO}",
            "resource": "/statements?context=<{_RDFSERVER}/spin-rules/{id}>",
            "inferenced_resource": null,
            "object_filter": "",
            "next_service": null,
            "on_delete_service": null,
            "on_fail_service": null,
            "object_mapping": []
        }
    },
    {
        "model": "rdf_io.servicebinding",
        "pk": 7,
        "fields": {
            "title": "SKOS Inferencing results persist",
            "description": "Persists inferencing results for SKOS rules that create a new graph based on a Concept URL, in the configured INFERREPO",
            "binding_type": "PERSIST_REPLACE",
            "service_api": "RDF4JREST",
            "service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_DEFAULTREPO}",
            "resource": "/statements?context=<{uri}?_view=inferred>",
            "inferenced_resource": null,
            "object_filter": "",
            "next_service": null,
            "on_delete_service": null,
            "on_fail_service": null,
            "object_mapping": []
        }
    },
    {
        "model": "rdf_io.servicebinding",
        "pk": 8,
        "fields": {
            "title": "Delete SKOS source data from inferencer",
            "description": "Delete intermediate source data from inferencer to keep it lean and clean.",
            "binding_type": "PERSIST_PURGE",
            "service_api": "RDF4JREST",
            "service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_INFERREPO}",
            "resource": "/statements?context=<{uri}>",
            "inferenced_resource": null,
            "object_filter": "",
            "next_service": 9,
            "on_delete_service": null,
            "on_fail_service": null,
            "object_mapping": []
        }
    },
    {
        "model": "rdf_io.servicebinding",
        "pk": 9,
        "fields": {
            "title": "SKOS inference - clean up inference graph",
            "description": "Delete inferenced context to keep inferencer performant",
            "binding_type": "PERSIST_PURGE",
            "service_api": "RDF4JREST",
            "service_url": "{_RDFSERVER}/rdf4j-server/repositories/{_INFERREPO}",
            "resource": "/statements?context=<{uri}_inferred>",
            "inferenced_resource": null,
            "object_filter": "",
            "next_service": null,
            "on_delete_service": null,
            "on_fail_service": null,
            "object_mapping": []
        }
    }
]